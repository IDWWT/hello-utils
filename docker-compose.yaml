version: '3.8'

services:
  hello-code:
    container_name: hello-code
    build:
      context: ./hello-code
      dockerfile: Dockerfile
      target: development
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - 13020:8080 # application port
      - 13021:8000 # debugger port
    environment:
      - DOPPLER_TOKEN=${DOPPLER_TOKEN_HELLO_CODE}
    develop:
      watch:
        - action: rebuild
          path: ./hello-code/src
          target: /app/src
        - action: rebuild
          path: ./hello-code/gradle
        - action: rebuild
          path: ./hello-code/build.gradle
        - action: rebuild
          path: ./hello-code/settings.gradle

  hello-web:
    container_name: hello-web
    build:
      context: ./hello-web
      dockerfile: Dockerfile
      target: development
    depends_on:
      hello-code:
        condition: service_started
      hello-user:
        condition: service_started
    ports:
      - 13010:3000
    environment:
      - DOPPLER_TOKEN=${DOPPLER_TOKEN_HELLO_WEB}
    develop:
      watch:
        - action: sync
          path: ./hello-web
          target: /app
          ignore:
            - node_modules
            - package.json
            - package-lock.json
        - action: rebuild
          path: ./hello-web/package.json
        - action: rebuild
          path: ./hello-web/package-lock.json
        - action: rebuild
          path: ./hello-web/next.config.js

  hello-user:
    container_name: hello-user
    build:
      context: ./hello-user
      dockerfile: Dockerfile
      target: development
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - 8000:5000
    environment:
      - DOPPLER_TOKEN=${DOPPLER_TOKEN_HELLO_USER}
    develop:
      watch:
        - action: sync
          path: ./hello-user
          target: /app
          ignore:
            - requirements.txt
        - action: rebuild
          path: ./hello-user/requirements.txt

  mysql:
    container_name: hello-db
    image: mysql:latest
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "$MYSQL_USER", "-p$MYSQL_PASSWORD"]
      timeout: 20s
      retries: 10
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
    ports:
      - "13001:3306"
    command:
      [
        "mysqld",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_bin"
      ]
    volumes:
      - ./mysql/data:/var/lib/mysql
    user: mysql

  redis:
    container_name: hello-redis
    image: redis:latest
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      timeout: 20s
      retries: 10
    ports:
      - "13002:6379"
    command: redis-server

  nginx:
    container_name: hello-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      hello-code:
        condition: service_started
      hello-web:
        condition: service_started
      hello-user:
        condition: service_started
    ports:
      - 80:80
    develop:
      watch:
        - action: sync+restart
          path: ./nginx/config/nginx.conf

networks:
  default:
    name: hell-network